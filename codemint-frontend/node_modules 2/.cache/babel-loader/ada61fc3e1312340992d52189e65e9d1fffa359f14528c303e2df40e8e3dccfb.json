{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/components/MessageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  background-color: ${props => props.theme.colors.inputBackground};\n`;\n_c = InputWrapper;\nconst Input = styled.input`\n  flex-grow: 1;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.secondary};\n  color: ${props => props.theme.colors.text};\n`;\n_c2 = Input;\nconst SendButton = styled.button`\n  margin-left: 10px;\n  padding: 10px;\n  background-color: ${props => props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n_c3 = SendButton;\nconst MessageInput = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleSend = () => {\n    console.log('Message sent:', message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(InputWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c4 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"SendButton\");\n$RefreshReg$(_c4, \"MessageInput\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","InputWrapper","div","props","theme","colors","inputBackground","_c","Input","input","secondary","text","_c2","SendButton","button","primary","_c3","MessageInput","_s","message","setMessage","handleSend","console","log","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/components/MessageInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst InputWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  background-color: ${(props) => props.theme.colors.inputBackground};\n`;\n\nconst Input = styled.input`\n  flex-grow: 1;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  background-color: ${(props) => props.theme.colors.secondary};\n  color: ${(props) => props.theme.colors.text};\n`;\n\nconst SendButton = styled.button`\n  margin-left: 10px;\n  padding: 10px;\n  background-color: ${(props) => props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nconst MessageInput = () => {\n  const [message, setMessage] = useState('');\n\n  const handleSend = () => {\n    console.log('Message sent:', message);\n    setMessage('');\n  };\n\n  return (\n    <InputWrapper>\n      <Input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <SendButton onClick={handleSend}>Send</SendButton>\n    </InputWrapper>\n  );\n};\n\nexport default MessageInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAG;AAC/B;AACA;AACA,sBAAuBC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,eAAe;AACnE,CAAC;AAACC,EAAA,GAJIN,YAAY;AAMlB,MAAMO,KAAK,GAAGV,MAAM,CAACW,KAAK;AAC1B;AACA;AACA;AACA;AACA,sBAAuBN,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,SAAS;AAC7D,WAAYP,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACM,IAAI;AAC7C,CAAC;AAACC,GAAA,GAPIJ,KAAK;AASX,MAAMK,UAAU,GAAGf,MAAM,CAACgB,MAAM;AAChC;AACA;AACA,sBAAuBX,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACU,OAAO;AAC3D;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIH,UAAU;AAUhB,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMwB,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,OAAO,CAAC;IACrCC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEpB,OAAA,CAACC,YAAY;IAAAuB,QAAA,gBACXxB,OAAA,CAACQ,KAAK;MACJiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEP,OAAQ;MACfQ,QAAQ,EAAGC,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFjC,OAAA,CAACa,UAAU;MAACqB,OAAO,EAAEb,UAAW;MAAAG,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEnB,CAAC;AAACf,EAAA,CAlBID,YAAY;AAAAkB,GAAA,GAAZlB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAV,EAAA,EAAAK,GAAA,EAAAI,GAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}