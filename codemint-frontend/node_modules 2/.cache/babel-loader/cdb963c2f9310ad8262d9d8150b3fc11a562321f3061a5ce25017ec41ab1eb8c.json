{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport AIThinkingIndicator from './AIThinkingIndicator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindowWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  position: relative;\n`;\n_c = ChatWindowWrapper;\nconst MessagesWrapper = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  box-sizing: border-box;\n`;\n_c2 = MessagesWrapper;\nconst ErrorMessage = styled.div`\n  background-color: ${props => props.theme.colors.error};\n  color: white;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n`;\n_c3 = ErrorMessage;\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n  const [isAiThinking, setIsAiThinking] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  console.log('Rendering ChatWindow. isAiThinking:', isAiThinking);\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    console.log('Scrolling to bottom');\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, []);\n  const sendMessage = useCallback(async content => {\n    console.log('Sending message:', content);\n    setError(null); // Clear any previous errors\n    try {\n      setMessages(prevMessages => {\n        console.log('Adding user message to state');\n        return [...prevMessages, {\n          role: 'user',\n          content\n        }];\n      });\n      setIsAiThinking(true);\n      console.log('Set isAiThinking to true');\n      const response = await axios.post('http://localhost:8000/chat', {\n        session_id: sessionId,\n        message: content\n      }, {\n        timeout: 30000 // Set a 30-second timeout\n      });\n      console.log('Received response from server:', response.data);\n      if (response.data && response.data.message) {\n        setIsAiThinking(false);\n        console.log('Set isAiThinking to false');\n        setMessages(prevMessages => {\n          console.log('Adding AI response to state');\n          return [...prevMessages, {\n            role: 'assistant',\n            content: response.data.message\n          }];\n        });\n        setSessionId(response.data.session_id);\n        console.log('Updated session ID:', response.data.session_id);\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error sending message:', error);\n      setIsAiThinking(false);\n      console.log('Set isAiThinking to false due to error');\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'An unexpected error occurred';\n      setError(`Error: ${errorMessage}`);\n      setMessages(prevMessages => {\n        console.log('Adding error message to state');\n        return [...prevMessages, {\n          role: 'assistant',\n          content: 'I apologize, but I encountered an error. Please try again.'\n        }];\n      });\n    }\n  }, [sessionId]);\n  useEffect(() => {\n    console.log('Messages or isAiThinking changed. Current state:', {\n      messagesCount: messages.length,\n      isAiThinking\n    });\n    scrollToBottom();\n  }, [messages, isAiThinking, scrollToBottom]);\n  useEffect(() => {\n    console.log('Initial render. Setting up chat window.');\n    // You can add any initial setup logic here\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChatWindowWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(MessagesWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this), isAiThinking && /*#__PURE__*/_jsxDEV(AIThinkingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: sendMessage,\n      disabled: isAiThinking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"3iE9VjD1xs0PbtOlVWLcgVASaFI=\");\n_c4 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ChatWindowWrapper\");\n$RefreshReg$(_c2, \"MessagesWrapper\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","MessageList","MessageInput","AIThinkingIndicator","axios","jsxDEV","_jsxDEV","ChatWindowWrapper","div","props","theme","colors","background","text","_c","MessagesWrapper","_c2","ErrorMessage","error","_c3","ChatWindow","_s","messages","setMessages","sessionId","setSessionId","isAiThinking","setIsAiThinking","setError","messagesEndRef","console","log","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","content","prevMessages","role","response","post","session_id","message","timeout","data","Error","_error$response","_error$response$data","errorMessage","messagesCount","length","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSendMessage","disabled","_c4","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport AIThinkingIndicator from './AIThinkingIndicator';\nimport axios from 'axios';\n\nconst ChatWindowWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  position: relative;\n`;\n\nconst MessagesWrapper = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  box-sizing: border-box;\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${props => props.theme.colors.error};\n  color: white;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n`;\n\nconst ChatWindow = () => {\n  const [messages, setMessages] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n  const [isAiThinking, setIsAiThinking] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  console.log('Rendering ChatWindow. isAiThinking:', isAiThinking);\n\n  const scrollToBottom = useCallback(() => {\n    console.log('Scrolling to bottom');\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, []);\n\n  const sendMessage = useCallback(async (content) => {\n    console.log('Sending message:', content);\n    setError(null); // Clear any previous errors\n    try {\n      setMessages(prevMessages => {\n        console.log('Adding user message to state');\n        return [...prevMessages, { role: 'user', content }];\n      });\n      \n      setIsAiThinking(true);\n      console.log('Set isAiThinking to true');\n\n      const response = await axios.post('http://localhost:8000/chat', {\n        session_id: sessionId,\n        message: content\n      }, {\n        timeout: 30000 // Set a 30-second timeout\n      });\n\n      console.log('Received response from server:', response.data);\n\n      if (response.data && response.data.message) {\n        setIsAiThinking(false);\n        console.log('Set isAiThinking to false');\n\n        setMessages(prevMessages => {\n          console.log('Adding AI response to state');\n          return [...prevMessages, { role: 'assistant', content: response.data.message }];\n        });\n\n        setSessionId(response.data.session_id);\n        console.log('Updated session ID:', response.data.session_id);\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setIsAiThinking(false);\n      console.log('Set isAiThinking to false due to error');\n      \n      const errorMessage = error.response?.data?.error || error.message || 'An unexpected error occurred';\n      setError(`Error: ${errorMessage}`);\n\n      setMessages(prevMessages => {\n        console.log('Adding error message to state');\n        return [...prevMessages, { role: 'assistant', content: 'I apologize, but I encountered an error. Please try again.' }];\n      });\n    }\n  }, [sessionId]);\n\n  useEffect(() => {\n    console.log('Messages or isAiThinking changed. Current state:', { messagesCount: messages.length, isAiThinking });\n    scrollToBottom();\n  }, [messages, isAiThinking, scrollToBottom]);\n\n  useEffect(() => {\n    console.log('Initial render. Setting up chat window.');\n    // You can add any initial setup logic here\n  }, []);\n\n  return (\n    <ChatWindowWrapper>\n      <MessagesWrapper>\n        <MessageList messages={messages} />\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {isAiThinking && <AIThinkingIndicator />}\n        <div ref={messagesEndRef} />\n      </MessagesWrapper>\n      <MessageInput onSendMessage={sendMessage} disabled={isAiThinking} />\n    </ChatWindowWrapper>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}