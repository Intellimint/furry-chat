{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai 2/intellimint-chat/src/components/AIThinkingIndicator.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spin = keyframes`\n  0% { content: '⠋'; }\n  10% { content: '⠙'; }\n  20% { content: '⠹'; }\n  30% { content: '⠸'; }\n  40% { content: '⠼'; }\n  50% { content: '⠴'; }\n  60% { content: '⠦'; }\n  70% { content: '⠧'; }\n  80% { content: '⠇'; }\n  90% { content: '⠏'; }\n`;\nconst IndicatorWrapper = styled.div`\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 10px 20px;\n  margin: 10px 0;\n  border-radius: 20px;\n  font-size: 16px;\n  position: absolute;\n  bottom: 70px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n`;\n_c = IndicatorWrapper;\nconst SpinnerChar = styled.span`\n  font-family: monospace;\n  font-size: 24px;\n  margin-right: 10px;\n  \n  &::before {\n    content: '⠋';\n    animation: ${spin} 1s linear infinite;\n  }\n`;\n_c2 = SpinnerChar;\nconst AIThinkingIndicator = () => {\n  console.log('Rendering AI Thinking Indicator');\n  return /*#__PURE__*/_jsxDEV(IndicatorWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SpinnerChar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \"AI is thinking...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c3 = AIThinkingIndicator;\nexport default AIThinkingIndicator;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"IndicatorWrapper\");\n$RefreshReg$(_c2, \"SpinnerChar\");\n$RefreshReg$(_c3, \"AIThinkingIndicator\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","jsxDEV","_jsxDEV","spin","IndicatorWrapper","div","_c","SpinnerChar","span","_c2","AIThinkingIndicator","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai 2/intellimint-chat/src/components/AIThinkingIndicator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% { content: '⠋'; }\n  10% { content: '⠙'; }\n  20% { content: '⠹'; }\n  30% { content: '⠸'; }\n  40% { content: '⠼'; }\n  50% { content: '⠴'; }\n  60% { content: '⠦'; }\n  70% { content: '⠧'; }\n  80% { content: '⠇'; }\n  90% { content: '⠏'; }\n`;\n\nconst IndicatorWrapper = styled.div`\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 10px 20px;\n  margin: 10px 0;\n  border-radius: 20px;\n  font-size: 16px;\n  position: absolute;\n  bottom: 70px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n`;\n\nconst SpinnerChar = styled.span`\n  font-family: monospace;\n  font-size: 24px;\n  margin-right: 10px;\n  \n  &::before {\n    content: '⠋';\n    animation: ${spin} 1s linear infinite;\n  }\n`;\n\nconst AIThinkingIndicator = () => {\n  console.log('Rendering AI Thinking Indicator');\n  \n  return (\n    <IndicatorWrapper>\n      <SpinnerChar />\n      AI is thinking...\n    </IndicatorWrapper>\n  );\n};\n\nexport default AIThinkingIndicator;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGH,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,gBAAgB,GAAGL,MAAM,CAACM,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAdIF,gBAAgB;AAgBtB,MAAMG,WAAW,GAAGR,MAAM,CAACS,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBL,IAAI;AACrB;AACA,CAAC;AAACM,GAAA,GATIF,WAAW;AAWjB,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;EAChCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAE9C,oBACEV,OAAA,CAACE,gBAAgB;IAAAS,QAAA,gBACfX,OAAA,CAACK,WAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,qBAEjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CAAC;AAEvB,CAAC;AAACC,GAAA,GATIR,mBAAmB;AAWzB,eAAeA,mBAAmB;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}