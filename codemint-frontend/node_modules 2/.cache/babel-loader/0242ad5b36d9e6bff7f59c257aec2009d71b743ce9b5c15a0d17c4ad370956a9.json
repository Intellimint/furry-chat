{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme'; // Ensure the path is correct\nimport MessageInput from './components/MessageInput';\nimport MessageList from './components/MessageList';\nimport './App.css'; // Import the CSS for global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSend = newMessage => {\n    setMessages([...messages, newMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          onSend: handleSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","theme","MessageInput","MessageList","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleSend","newMessage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';  // Ensure the path is correct\nimport MessageInput from './components/MessageInput';\nimport MessageList from './components/MessageList';\nimport './App.css';  // Import the CSS for global styles\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  const handleSend = (newMessage) => {\n    setMessages([...messages, newMessage]);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <div className=\"ChatContainer\">\n          <MessageList messages={messages} />\n          <MessageInput onSend={handleSend} />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAE;AAC9B,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,UAAU,GAAIC,UAAU,IAAK;IACjCF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,UAAU,CAAC,CAAC;EACxC,CAAC;EAED,oBACEN,OAAA,CAACL,aAAa;IAACC,KAAK,EAAEA,KAAM;IAAAW,QAAA,eAC1BP,OAAA;MAAKQ,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBP,OAAA;QAAKQ,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BP,OAAA,CAACF,WAAW;UAACK,QAAQ,EAAEA;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnCZ,OAAA,CAACH,YAAY;UAACgB,MAAM,EAAER;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAACV,EAAA,CAjBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}