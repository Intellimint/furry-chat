{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/components/MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, memo } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 120px); // Adjust based on your header and input heights\n  overflow-y: auto;\n  padding: 20px;\n`;\n_c = MessageListContainer;\nconst MessageWrapper = styled.div`\n  display: flex;\n  justify-content: ${props => props.isUser ? 'flex-end' : 'flex-start'};\n  width: 100%;\n  margin-bottom: 10px;\n`;\n_c2 = MessageWrapper;\nconst Message = styled.div`\n  background-color: ${props => props.isUser ? props.theme.colors.mutedGreen : props.theme.colors.primary};\n  color: ${props => props.theme.colors.text};\n  padding: 10px 15px;\n  border-radius: 20px;\n  max-width: 60%;\n  min-width: 50px; // Add a minimum width\n  word-wrap: break-word;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  line-height: 1.4;\n  font-size: 1rem;\n  align-self: ${props => props.isUser ? 'flex-end' : 'flex-start'};\n`;\n_c3 = Message;\nconst MemoizedMessage = /*#__PURE__*/memo(_c4 = ({\n  content,\n  isUser\n}) => /*#__PURE__*/_jsxDEV(MessageWrapper, {\n  isUser: isUser,\n  children: /*#__PURE__*/_jsxDEV(Message, {\n    isUser: isUser,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this));\n_c5 = MemoizedMessage;\nconst MessageList = ({\n  messages\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(MemoizedMessage, {\n      content: message.content,\n      isUser: message.role === 'user'\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c6 = MessageList;\nexport default _c7 = /*#__PURE__*/memo(MessageList);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessageWrapper\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"MemoizedMessage$memo\");\n$RefreshReg$(_c5, \"MemoizedMessage\");\n$RefreshReg$(_c6, \"MessageList\");\n$RefreshReg$(_c7, \"%default%\");","map":{"version":3,"names":["React","useRef","useEffect","memo","styled","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessageWrapper","props","isUser","_c2","Message","theme","colors","mutedGreen","primary","text","_c3","MemoizedMessage","_c4","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","MessageList","messages","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","map","message","index","role","ref","_c6","_c7","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/components/MessageList.js"],"sourcesContent":["import React, { useRef, useEffect, memo } from 'react';\nimport styled from 'styled-components';\n\nconst MessageListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 120px); // Adjust based on your header and input heights\n  overflow-y: auto;\n  padding: 20px;\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  justify-content: ${props => (props.isUser ? 'flex-end' : 'flex-start')};\n  width: 100%;\n  margin-bottom: 10px;\n`;\n\nconst Message = styled.div`\n  background-color: ${props => (props.isUser ? props.theme.colors.mutedGreen : props.theme.colors.primary)};\n  color: ${props => props.theme.colors.text};\n  padding: 10px 15px;\n  border-radius: 20px;\n  max-width: 60%;\n  min-width: 50px; // Add a minimum width\n  word-wrap: break-word;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  line-height: 1.4;\n  font-size: 1rem;\n  align-self: ${props => (props.isUser ? 'flex-end' : 'flex-start')};\n`;\n\nconst MemoizedMessage = memo(({ content, isUser }) => (\n  <MessageWrapper isUser={isUser}>\n    <Message isUser={isUser}>{content}</Message>\n  </MessageWrapper>\n));\n\nconst MessageList = ({ messages }) => {\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  return (\n    <MessageListContainer>\n      {messages.map((message, index) => (\n        <MemoizedMessage\n          key={index}\n          content={message.content}\n          isUser={message.role === 'user'}\n        />\n      ))}\n      <div ref={messagesEndRef} />\n    </MessageListContainer>\n  );\n};\n\nexport default memo(MessageList);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}