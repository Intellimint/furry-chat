{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai 2/intellimint-chat/intellimint-chat-new/src/components/MessageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  border-top: none;\n  position: fixed;\n  bottom: 0;\n  width: calc(100% - 20px); /* Adjusted width to account for padding */\n  left: 0;\n  z-index: 1000;\n`;\n_c = InputWrapper;\nconst Input = styled.input`\n  flex-grow: 1;\n  padding: 10px;\n  font-size: 1.0rem;  /* Adjusted font size to match the rest of the app */\n  border-radius: 5px;\n  border: 1px solid ${props => props.theme.colors.border};\n  background-color: ${props => props.theme.colors.input};  /* Set to dark grey */\n  color: ${props => props.theme.colors.text};\n  margin-right: 10px;\n  outline: none;\n\n  ::placeholder {\n    color: ${props => props.theme.colors.text};  /* Placeholder text color */\n  }\n`;\n_c2 = Input;\nconst SendButton = styled.button`\n  padding: 10px 20px;\n  font-size: 1.2rem;  /* Match the font size of the input */\n  background-color: ${props => props.theme.colors.mutedGreen};\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  white-space: nowrap;\n  \n  &:hover {\n    background-color: ${props => props.theme.colors.hoverGreen};\n  }\n`;\n_c3 = SendButton;\nconst MessageInput = ({\n  onSendMessage\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleSend = () => {\n    if (message.trim()) {\n      onSendMessage(message);\n      setMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c4 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"SendButton\");\n$RefreshReg$(_c4, \"MessageInput\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","InputWrapper","div","props","theme","colors","inputBackground","_c","Input","input","border","text","_c2","SendButton","button","mutedGreen","hoverGreen","_c3","MessageInput","onSendMessage","_s","message","setMessage","handleSend","trim","handleKeyPress","e","key","children","type","value","onChange","target","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai 2/intellimint-chat/intellimint-chat-new/src/components/MessageInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst InputWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  border-top: none;\n  position: fixed;\n  bottom: 0;\n  width: calc(100% - 20px); /* Adjusted width to account for padding */\n  left: 0;\n  z-index: 1000;\n`;\n\nconst Input = styled.input`\n  flex-grow: 1;\n  padding: 10px;\n  font-size: 1.0rem;  /* Adjusted font size to match the rest of the app */\n  border-radius: 5px;\n  border: 1px solid ${props => props.theme.colors.border};\n  background-color: ${props => props.theme.colors.input};  /* Set to dark grey */\n  color: ${props => props.theme.colors.text};\n  margin-right: 10px;\n  outline: none;\n\n  ::placeholder {\n    color: ${props => props.theme.colors.text};  /* Placeholder text color */\n  }\n`;\n\nconst SendButton = styled.button`\n  padding: 10px 20px;\n  font-size: 1.2rem;  /* Match the font size of the input */\n  background-color: ${props => props.theme.colors.mutedGreen};\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  white-space: nowrap;\n  \n  &:hover {\n    background-color: ${props => props.theme.colors.hoverGreen};\n  }\n`;\n\nconst MessageInput = ({ onSendMessage }) => {\n  const [message, setMessage] = useState('');\n\n  const handleSend = () => {\n    if (message.trim()) {\n      onSendMessage(message);\n      setMessage('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  return (\n    <InputWrapper>\n      <Input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyPress={handleKeyPress}\n        placeholder=\"Type your message...\"\n      />\n      <SendButton onClick={handleSend}>Send</SendButton>\n    </InputWrapper>\n  );\n};\n\nexport default MessageInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAG;AAC/B;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIN,YAAY;AAYlB,MAAMO,KAAK,GAAGV,MAAM,CAACW,KAAK;AAC1B;AACA;AACA;AACA;AACA,sBAAsBN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AACxD,sBAAsBP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACI,KAAK;AACvD,WAAWN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACM,IAAI;AAC3C;AACA;AACA;AACA;AACA,aAAaR,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACM,IAAI;AAC7C;AACA,CAAC;AAACC,GAAA,GAdIJ,KAAK;AAgBX,MAAMK,UAAU,GAAGf,MAAM,CAACgB,MAAM;AAChC;AACA;AACA,sBAAsBX,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACU,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBZ,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACW,UAAU;AAC9D;AACA,CAAC;AAACC,GAAA,GAbIJ,UAAU;AAehB,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM0B,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,EAAE;MAClBL,aAAa,CAACE,OAAO,CAAC;MACtBC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMG,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBJ,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY;IAAA2B,QAAA,gBACX5B,OAAA,CAACQ,KAAK;MACJqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAET,OAAQ;MACfU,QAAQ,EAAGL,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACM,MAAM,CAACF,KAAK,CAAE;MAC5CG,UAAU,EAAER,cAAe;MAC3BS,WAAW,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFtC,OAAA,CAACa,UAAU;MAAC0B,OAAO,EAAEhB,UAAW;MAAAK,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEnB,CAAC;AAAClB,EAAA,CA5BIF,YAAY;AAAAsB,GAAA,GAAZtB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAX,EAAA,EAAAK,GAAA,EAAAK,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}