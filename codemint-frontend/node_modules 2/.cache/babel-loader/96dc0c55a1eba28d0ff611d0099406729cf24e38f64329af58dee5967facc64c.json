{"ast":null,"code":"var _jsxFileName = \"/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport MessageInput from './components/MessageInput';\nimport MessageList from './components/MessageList';\nimport './App.css'; // Import the CSS file for styling\n\n// Define the theme directly or import from a separate file if preferred\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  colors: {\n    background: '#000000',\n    // Black background\n    inputBackground: '#2D2D2D',\n    // Gray background for inputs\n    text: '#FFFFFF',\n    // White text\n    secondary: '#3D3D3D',\n    // Darker gray for input borders or accents\n    buttonBackground: '#98FF98',\n    // Muted green for the send button\n    buttonText: '#000000' // Black text for the button\n  }\n};\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSend = newMessage => {\n    setMessages([...messages, newMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-header\",\n        children: \"Hello, Intellimint!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSend: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","MessageInput","MessageList","jsxDEV","_jsxDEV","theme","colors","background","inputBackground","text","secondary","buttonBackground","buttonText","App","_s","messages","setMessages","handleSend","newMessage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["/Users/satoshinakamoto/Documents/intellimint-ai/intellimint-chat/intellimint-chat-new/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport MessageInput from './components/MessageInput';\nimport MessageList from './components/MessageList';\nimport './App.css'; // Import the CSS file for styling\n\n// Define the theme directly or import from a separate file if preferred\nconst theme = {\n  colors: {\n    background: '#000000', // Black background\n    inputBackground: '#2D2D2D', // Gray background for inputs\n    text: '#FFFFFF', // White text\n    secondary: '#3D3D3D', // Darker gray for input borders or accents\n    buttonBackground: '#98FF98', // Muted green for the send button\n    buttonText: '#000000', // Black text for the button\n  },\n};\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  const handleSend = (newMessage) => {\n    setMessages([...messages, newMessage]);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <h1 className=\"App-header\">Hello, Intellimint!</h1>\n        <MessageList messages={messages} />\n        <MessageInput onSend={handleSend} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW,CAAC,CAAC;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG;EACZC,MAAM,EAAE;IACNC,UAAU,EAAE,SAAS;IAAE;IACvBC,eAAe,EAAE,SAAS;IAAE;IAC5BC,IAAI,EAAE,SAAS;IAAE;IACjBC,SAAS,EAAE,SAAS;IAAE;IACtBC,gBAAgB,EAAE,SAAS;IAAE;IAC7BC,UAAU,EAAE,SAAS,CAAE;EACzB;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMkB,UAAU,GAAIC,UAAU,IAAK;IACjCF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,UAAU,CAAC,CAAC;EACxC,CAAC;EAED,oBACEd,OAAA,CAACJ,aAAa;IAACK,KAAK,EAAEA,KAAM;IAAAc,QAAA,eAC1Bf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBf,OAAA;QAAIgB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnDpB,OAAA,CAACF,WAAW;QAACa,QAAQ,EAAEA;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCpB,OAAA,CAACH,YAAY;QAACwB,MAAM,EAAER;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAACV,EAAA,CAhBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}